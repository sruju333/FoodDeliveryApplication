{"ast":null,"code":"import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { restaurantListReducer } from './reducers/restaurantReducers';\nimport { foodListReducer } from './reducers/foodReducers';\nimport { cartReducer } from './reducers/cartReducers';\nimport { userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer } from './reducers/userReducers';\nimport { orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer } from './reducers/orderReducers';\nconst reducer = combineReducers({\n  restaurantList: restaurantListReducer,\n  foodList: foodListReducer,\n  cart: cartReducer,\n  userLogin: userLoginReducer,\n  userRegister: userRegisterReducer,\n  orderCreate: orderCreateReducer,\n  orderDetails: orderDetailsReducer,\n  orderPay: orderPayReducer,\n  userDetails: userDetailsReducer,\n  userUpdateProfile: userUpdateProfileReducer,\n  orderListMy: orderListMyReducer\n});\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems')) : [];\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress')) : null;\nconst initialState = {\n  cart: {\n    cartItems: cartItemsFromStorage,\n    shippingAddress: shippingAddressFromStorage\n  },\n  userLogin: {\n    userInfo: userInfoFromStorage\n  }\n};\nconst middleware = [thunk];\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\nexport default store;","map":{"version":3,"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","restaurantListReducer","foodListReducer","cartReducer","userLoginReducer","userRegisterReducer","userDetailsReducer","userUpdateProfileReducer","orderCreateReducer","orderDetailsReducer","orderPayReducer","orderListMyReducer","reducer","restaurantList","foodList","cart","userLogin","userRegister","orderCreate","orderDetails","orderPay","userDetails","userUpdateProfile","orderListMy","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","shippingAddressFromStorage","initialState","cartItems","shippingAddress","userInfo","middleware","store"],"sources":["C:/Users/rajjyoti.doley/Desktop/FoodDeliveryApplication/frontend/src/store.js"],"sourcesContent":["import {createStore, combineReducers, applyMiddleware} from 'redux'\r\nimport thunk from 'redux-thunk'\r\nimport {composeWithDevTools} from 'redux-devtools-extension'\r\nimport {restaurantListReducer} from './reducers/restaurantReducers'\r\nimport {foodListReducer} from './reducers/foodReducers'\r\nimport {cartReducer} from './reducers/cartReducers'\r\nimport {userLoginReducer, userRegisterReducer, userDetailsReducer, userUpdateProfileReducer} from './reducers/userReducers'\r\nimport {orderCreateReducer, orderDetailsReducer, orderPayReducer, orderListMyReducer} from './reducers/orderReducers'\r\n\r\nconst reducer = combineReducers({\r\n    restaurantList: restaurantListReducer,\r\n    foodList: foodListReducer,\r\n    cart: cartReducer,\r\n    userLogin: userLoginReducer,\r\n    userRegister: userRegisterReducer,\r\n    orderCreate: orderCreateReducer,\r\n    orderDetails: orderDetailsReducer,\r\n    orderPay: orderPayReducer,\r\n    userDetails: userDetailsReducer,\r\n    userUpdateProfile: userUpdateProfileReducer,\r\n    orderListMy: orderListMyReducer,\r\n})\r\n\r\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ? JSON.parse(localStorage.getItem('cartItems'))\r\n: []\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo'))\r\n: null\r\n\r\nconst shippingAddressFromStorage = localStorage.getItem('shippingAddress') ? JSON.parse(localStorage.getItem('shippingAddress'))\r\n: null\r\n\r\n\r\nconst initialState = {\r\n    cart: {cartItems: cartItemsFromStorage, shippingAddress: shippingAddressFromStorage},\r\n    userLogin: {userInfo: userInfoFromStorage},\r\n}\r\nconst middleware=[thunk]\r\n\r\nconst store = createStore(reducer, initialState, composeWithDevTools(applyMiddleware(...middleware)))\r\n\r\nexport default store\r\n"],"mappings":"AAAA,SAAQA,WAAR,EAAqBC,eAArB,EAAsCC,eAAtC,QAA4D,OAA5D;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAAQC,mBAAR,QAAkC,0BAAlC;AACA,SAAQC,qBAAR,QAAoC,+BAApC;AACA,SAAQC,eAAR,QAA8B,yBAA9B;AACA,SAAQC,WAAR,QAA0B,yBAA1B;AACA,SAAQC,gBAAR,EAA0BC,mBAA1B,EAA+CC,kBAA/C,EAAmEC,wBAAnE,QAAkG,yBAAlG;AACA,SAAQC,kBAAR,EAA4BC,mBAA5B,EAAiDC,eAAjD,EAAkEC,kBAAlE,QAA2F,0BAA3F;AAEA,MAAMC,OAAO,GAAGf,eAAe,CAAC;EAC5BgB,cAAc,EAAEZ,qBADY;EAE5Ba,QAAQ,EAAEZ,eAFkB;EAG5Ba,IAAI,EAAEZ,WAHsB;EAI5Ba,SAAS,EAAEZ,gBAJiB;EAK5Ba,YAAY,EAAEZ,mBALc;EAM5Ba,WAAW,EAAEV,kBANe;EAO5BW,YAAY,EAAEV,mBAPc;EAQ5BW,QAAQ,EAAEV,eARkB;EAS5BW,WAAW,EAAEf,kBATe;EAU5BgB,iBAAiB,EAAEf,wBAVS;EAW5BgB,WAAW,EAAEZ;AAXe,CAAD,CAA/B;AAcA,MAAMa,oBAAoB,GAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,IAAoCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CAApC,GAC3B,EADF;AAGA,MAAMG,mBAAmB,GAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,IAAmCC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CAAnC,GAC1B,IADF;AAGA,MAAMI,0BAA0B,GAAGL,YAAY,CAACC,OAAb,CAAqB,iBAArB,IAA0CC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,iBAArB,CAAX,CAA1C,GACjC,IADF;AAIA,MAAMK,YAAY,GAAG;EACjBhB,IAAI,EAAE;IAACiB,SAAS,EAAER,oBAAZ;IAAkCS,eAAe,EAAEH;EAAnD,CADW;EAEjBd,SAAS,EAAE;IAACkB,QAAQ,EAAEL;EAAX;AAFM,CAArB;AAIA,MAAMM,UAAU,GAAC,CAACpC,KAAD,CAAjB;AAEA,MAAMqC,KAAK,GAAGxC,WAAW,CAACgB,OAAD,EAAUmB,YAAV,EAAwB/B,mBAAmB,CAACF,eAAe,CAAC,GAAGqC,UAAJ,CAAhB,CAA3C,CAAzB;AAEA,eAAeC,KAAf"},"metadata":{},"sourceType":"module"}